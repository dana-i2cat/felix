#!/bin/bash

###
#    @author: CarolinaFernandez
#    @organization: i2CAT
#    @project: Ofelia FP7
#    @description: pre-upgrade-hook module 
###

#inform user
printHeader "info#" "Using specific 0.8.2 pre-upgrade-hook module..."

# Changing permissions for Apache2 logs
for log_file in $(find /var/log/apache2 -name "*error_log")
do
    chmod 755 $log_file
    chown www-data $log_file
done

# ----------------------------------------
# Removing .pyc files from antique folders
# ----------------------------------------
# Root for "expedient" folder
expedient_dir=$EXECPATH/..

print "Removing old folders..."
# Remove folders that are not tracker anymore (thus, no .py files)
# > Before that, check that no ".py" file is indeed located there
geni_dir=$expedient_dir/src/python/geni
if [ -d $geni_dir ]; then
  if [ $(find $geni_dir -name "*.py" | wc -l) == 0 ]; then
    rm -r $geni_dir
  fi
fi
expedient_geni_dir=$expedient_dir/src/python/expedient_geni
if [ -d $expedient_geni_dir ]; then
  if [ $(find $expedient_geni_dir -name "*.py" | wc -l) == 0 ]; then
    rm -r $expedient_geni_dir
  fi
fi
sfa_dir=$expedient_dir/src/python/sfa
if [ -d $sfa_dir ]; then
  if [ $(find $sfa_dir -name "*.py" | wc -l) == 0 ]; then
    rm -r $sfa_dir
  fi
fi
# ----------------------------------------

# ----------------------------------------
# Removing old (conflicting) Django apps
# ----------------------------------------
# Root for "manage.py" file
expedient_manage_dir=$expedient_dir/src/python/expedient/clearinghouse
current_dir=$PWD
cd $expedient_manage_dir

print "Removing old Django apps..."
## Initial backup
#manage_clear_app=$(python manage.py dumpdata gopenflow)
## Retrieve data within braces
#manage_clear_app=$(expr "$manage_clear_app" : '.*\[\(.*\)].*')
#manage_clear_app="[$manage_clear_app]"
#python manage.py loaddata $manage_clear_app

# Completely clear those apps (no data on them)
manage_clear_app=$(python manage.py sqlclear gopenflow)
manage_clear_app=$(expr "$manage_clear_app" : '.*BEGIN;\([^;]*\);.*');
manage_clear_app="BEGIN; $manage_clear_app; COMMIT;"
echo $manage_clear_app | python manage.py dbshell

manage_clear_app=$(python manage.py sqlclear planetlab)
manage_clear_app=$(expr "$manage_clear_app" : '.*BEGIN;\([^;]*\);.*');
manage_clear_app="BEGIN; $manage_clear_app; COMMIT;"
echo $manage_clear_app | python manage.py dbshell

cd $current_dir
# ----------------------------------------

#shutdown apache
print "Shutting down apache2..."
/usr/sbin/service apache2 stop

#Check for OFELIA installation
OFELIA="none"

while [ $OFELIA != "yes" ] && [ $OFELIA != "no" ] && [ $OFELIA != 1 ] && [ $OFELIA != 0 ]
    do
        echo "Is this an OFELIA istallation? (yes/no):"
        read OFELIA
        if [ $OFELIA == yes ]; then 
            OFELIA=1
        elif [ $OFELIA == no ]; then
            OFELIA=0
        else
            echo "Not valid option. Please say yes/no"
        fi
    done

